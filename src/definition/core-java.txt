***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer:A programing language is a formal language consist of a set of strings that produce various kinds of machine code
output.Programing languages are one kind of computer language, and are used in computer programing to implement algorithms.

 What is a JDK composed of? Define each component?
Answer:JDK (Java Development Kite) is a software used to developed java applications and applets. JDK contains:
> JRE(Java Runtime Environment) software builds a runtime environment in which java programs can be executed.
> Interpreter/Loader(Java) a computer program that implement the JVM. It is responsible for reading and executing
the program. It is designed in such a way that it can read the source program and translate the source code instruction by
instruction.
>Compiler (Javac) a computer software that translates (compiles) source code written in high-level language into a set of
machine language instructions that cab be understood by a digital computer's CPU. Compilers are very large programs with
error checking and other abilities.
> An Archiver (Jar) a package of file format typically used to agregate many java class files and associated metadata and
resources into one file for distribution. JAR files are archive files that include a Java-spectific manifest  file. They are
built on the ZIP format and typically have a .jar file extension. Eg. Oracle archive.
> JavaDoc is a documentation generator tool in java programing language for generating standard documentations in HTML format.
It generates API documentation. It parses the declarations ad documentations in a set of source file describing classes,
methods, constructors, and fields. JavaDoc comments/**.......*/ provide information about classes, methods, constructors etc.

What is an IDE?
Answer: IDE (Integrated Development Environment) is a software suite that consolidates basic tools required to write and
test software. More popular IDE tools include NetBeans, Eclipse and IntelliJ IDEA.

What are some of the most popular Java IDEs available in the market?
Answer: Some popular Java IDEs are Eclipse, NetBeans, IntelliJ IDEA, BlueJ, (Oracle) JDeveloper and DrJava.

Explain the entire java life cycle.
Answer: Life cycle of java program starts from when we type source code in a text editor to the point that source code is
converted into machine code(0's and 1's). There are three stages in the life cycle of java program.
* Editing the program start with typing the program in a text-editor(Ex. notepad, notepad++, wordpad, textedit etc).After
editing save the file with .java extension.
* Compilation is to put java source code in the compiler to be changed into bytecode. The file which is generated after
compilation is .class file.
* Execution the bytecode generated by the compiler will be executed by JVM into machine code.

What is a class?
Answer: A class is a blueprint or a set of instructions to build a specific type of object. A class in java determines
how an object will behave and what the object will contain.

What is an object?
Answer: Object is an instance of a class. It is a combination of data and procedures. An object has a state(data) and
behavior. The state of an object is a variable, while methods(functions) display the object's behavior. An object ie
created using the keyword "new".

What is the entry point of an application?
Answer: The main method is the entry point of java application.

Why is the main() static?
Answer: Java main() method is always static,so that compiler can call it without the creation of an object or before the
creation of an object of the class.

Which class is the superclass of all classes?
Answer: Object is a super class of any class by default.

What is difference between path and classpath variables?
Answer: Path is the environment variable where we specify the location of a binaries. Ex. we add bin directory path of JDK
or JRE, so that any binaries under the directory can be accessed directly without specifying absolut path.
Classpath is the path for java application where the classes you compiled will be available.

What is the difference between an Interface and Abstract class?
Answer: An abstract class allows you to creat functionality that subclasses can implement or override. An interface only
allows you to define functionality, not implement it. And whereas a class can extend only one abstract class, it can take
multiple interfaces.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: No, you cannot creat an object of abstract class or interface since they are incomplete class (interface is not
even considered as a class). What we can do is to implement a subclass of abstract class which must not be abstract.

What is Access Modifier?
Answer: Access modifier in java is used to specify the access level of the classes, variables, methods and constructors.
It helps to update the value of the variable, also known as access/ visibility modifiers.

What is OOP? Define each OOP concept.
Answer: OOP(Object-Oriented Programing) refers to a type of programing the data type and the type of operations that can
be applied to the data structure. An object-based application is declaring classes, creating objects from them, and
interacting between these objects.

What is Java Package and which package is imported by default?
Answer: Java compiler imports java lang package by default. It provides the fundamental classes that are necessary to
design a basic java program. The important classes are object, which is the root of the class hierarchy, and class,
instances of which represent classes at run time.
A java package organizes java classes into namespace, providing a unique namespace for each type it contains. Classes in
the same package can access each package can contain the following kinds of types: classes, interface, enumerations, and
annotation types.

What is an API? List some API's that you have used so far.
Answer: API(Application Programing Interface) is a connection between computers or between computer programs.It is a type
of software interface, offering a service to other pieces of software. Different types of APIs, alongside protocols and
standards, such as Open APIs, Internal APIs, Partner APIs, Composite APIs etc.

Does java support multiple inheritance? Why or why not?
Answer: Java supports multiple inheritance through interfaces only. A class can implement any number of interfaces but
can extend only one class. Multiple inheritance is not supported because it leads to deadly diamond problem.

What is method overloading and when does it happen?
Answer: Overloading occurs when two or more methods in one class have the same method name but different parameters.
Must have at least two methods by the same name in the class. Must have a different number of parameters. If the number
of parameters is the same, then it must have different types of parameters.

Explain exceptions in java and how to handle them.
Answer: The try-catch is the simplest method of handling exceptions. Put the code you want to run in the try block, and
any Java exceptions that the code throws are caught by one or more catch blocks. This method will catch any type of Java
exceptions that get thrown. This is the simplest mechanism for handling exceptions.

What is static keyword? When and how do we use it?
Answer: In Java, static keyword is mainly used for memory management. It can be used with variables, methods,
blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically,
static is used for a constant variable or a method that is same for every instance of a class.

What is final keyword? When and how do we use it?
Answer: Java final keyword is a non-access specifier that is used to restrict a class, variable, and method. If we
initialize a variable with the final keyword, then we cannot modify its value. If we declare a method as final, then it
cannot be overridden by any subclasses.

Explain the difference between final, finally and finalize?
Answer: The basic difference between final, finally and finalize is that the final is an access modifier, finally is the
block in Exception Handling and finalize is the method of object class. ... finally is the block in Java Exception
Handling to execute the important code whether the exception occurs or not.

What is a constructor?
Answer: A constructor in Java is a block of code similar to a method that's called when an instance of an object is
created. ... A constructor doesn't have a return type. The name of the constructor must be the same as the name of the
class. Unlike methods, constructors are not considered members of a class.

Can we have multiple constructors in a class?
Answer: The technique of having two (or more) constructors in a class is known as constructor overloading. A class can
have multiple constructors that differ in the number and/or type of their parameters. It's not, however, possible to have
two constructors with the exact same parameters.

If we don't have a constructor declared, what is called during the object creation?
Answer: All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler
automatically provides a no-argument constructor, called the default constructor. ... If the parent has no constructor
( Object does have one), the compiler will reject the program.

What is "this" keyword in Java? When would we use it?
Answer: The this keyword refers to the current object in a method or constructor. The most common use of the this keyword
is to eliminate the confusion between class attributes and parameters with the same name (because a class attribute is
shadowed by a method or constructor parameter). ... Return the current class object.

What is "super" keyword in Java? What are some scenarios we would use it?
Answer: super can be used to refer immediate parent class instance variable. super can be used to invoke immediate parent
class method. super() can be used to invoke immediate parent class constructor.

What does JVM stand for?
Answer: A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as
programs written in other languages that are also compiled to Java bytecode.

Is JVM platform independent?
Answer: No, JVMs are not platform independent. In fact they are platform specific run time environment provided by the
vendor. Each platform (Windows, UNIX, Mac etc) has its own JVM to run Java applications.

What version of Java are you using?
Answer: Java (TM) SE development kit 11.0.12 (64 bit)

What does JAR stand for?
Answer: JAR stands for "Java ARchive". A JAR file is basically a zip-file which contains a couple of class files and a
text file containing some meta information.

What is the difference between JDK and JVM?
Answer: JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM
is an environment for executing bytecode. Whatever Java program you run using JRE or JDK goes into JVM and JVM is
responsible for executing the java program line by line hence it is also known as interpreter.
It enables you to handle multiple extensions in a single catch block.
JDK includes all features that JRE has.
It contains development tools such as a compiler, debugger, etc.
JDK provides the environment to develop and execute Java source code.
It can be installed on Windows, Unix, and Mac operating systems.
Diamond operator can be used in specifying a generic type interface instead of writing the exact one.

What is the difference between JVM and JRE?
Answer: JVM provides a platform-independent way of executing Java source code.
        It has numerous libraries, tools, and frameworks.
        Once you run Java program, you can run on any platform and save lots of time.
        JVM comes with JIT(Just-in-Time) compiler that converts Java source code into low-level machine language.
        Hence, it runs faster as a regular application.
        JRE contains class libraries, JVM, and other supporting files. It does not contain any tool for Java development
        like a debugger, compiler, etc.
        It uses important package classes like math, swingetc, util, lang, awt, and runtime libraries.
        If you have to run Java applets, then JRE must be installed in your system.

Explain the difference between compile-time and run-time?
Answer: Compile time is the period when the programming code (such as C#,  Java, C, Python) is converted to the machine
code (i.e. binary code). Runtime is the period of time when a program is running and generally occurs after compile time.

What is heap?
Answer: The Java heap is the area of memory used to store objects instantiated by applications running on the JVM.
Objects in the heap can be shared between threads. Many users restrict the Java heap size to 2-8 GB in order to minimize
garbage collection pauses.

How does Java manage its memory?
Answer: In Java, memory management is the process of allocation and de-allocation of objects, called Memory management.
Java does memory management automatically. Java uses an automatic memory management system called a garbage collector.

What is the difference between String, StringBuffer and StringBuilder?
Answer: String is immutable whereas StringBuffer and StringBuilder are mutable classes.
        StringBuffer is thread-safe and synchronized whereas StringBuilder is not. That’s why StringBuilder is faster
        than StringBuffer.
        String concatenation operator (+) internally uses StringBuffer or StringBuilder class.
        For String manipulations in a non-multi threaded environment, we should use StringBuilder else use StringBuffer class.
 StringBuilder is better suited than StringBuffer in most of the general programming scenarios.

What is Singleton class?
Answer: A Singleton class in Java allows only one instance to be created and provides global access to all other classes
through this single object or instance. Similar to the static fields, The instance fields(if any) of a class will occur
only for a single time.

What is Serialization and Deserialization?
Answer: Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the
reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to
persist the object. ... To make a Java object serializable we implement the java.

Explain the difference between While and Do..While loops?
Answer: The do while loop executes the content of the loop once before checking the condition of the while. Whereas a
while loop will check the condition first before executing the content.

What is Enum?
Answer: An enum type is a special data type that enables for a variable to be a set of predefined constants. The variable
must be equal to one of the values that have been predefined for it. Common examples include compass directions (values
of NORTH, SOUTH, EAST, and WEST) and the days of the week.

What is Iterator?
Answer: An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet. It is called
an "iterator" because "iterating" is the technical term for looping. To use an Iterator, you must import it from the java.
util package.

Which one will take more memory: an int or Integer? Why?
Answer: A Java both int and Integer are used to store integer type data the major difference between both is type of int
is primitive while Integer is of class type. ... int helps in storing integer value into memory. Integer helps in
converting int into object and to convert an object into int as per requirement.

Why are Strings considered to be immutable in Java?
Answer: The String is immutable in Java because of the security, synchronization and concurrency, caching, and class
loading. The reason of making string final is to destroy the immutability and to not allow others to extend it.
The String objects are cached in the String pool, and it makes the String immutable.

What is constructor chaining in Java?
Answer: Constructor chaining is the process of calling one constructor from another constructor with respect to current
object. ... Within same class: It can be done using this() keyword for constructors in same class. From base class: by
using super() keyword to call constructor from the base class.

The difference between Serial and Parallel Garbage Collector?
Answer: The only difference between serial and parallel garbage collector is that serial garbage collector uses a single
thread for garbage collection process while the parallel garbage collector uses multiple threads for the garbage collection.
Parallel GC can use multiple CPUs to speed up the application throughput.

What does JIT stands for?
Answer: Just in Time (JIT)

Explain the process of Java garbage collection?
Answer: Java garbage collection is the process by which Java programs perform automatic memory management. Java programs
compile to bytecode that can be run on a Java Virtual Machine, or JVM for short. When Java programs run on the JVM, objects
are created on the heap, which is a portion of memory dedicated to the program.

Can you guarantee the garbage collection process?
Answer: No, Garbage collection does not guarantee that a program will not run out of memory. The purpose of garbage
collection (GC) is to identify and discard objects that are no longer needed by a Java program, so that their resources
can be reclaimed and reused.

What is the difference between stack and heap in Java?
Answer: Java Heap Space is used throughout the application, but Stack is only used for the
        method — or methods — currently running.
        The Heap Space contains all objects are created, but Stack contains any reference to those objects.
        Objects stored in the Heap can be accessed throughout the application. Primitive local variables are only
        accessed the Stack Memory blocks that contain their methods.
        Memory allocation in the Heap Space is accessed through a complex, young-generation, old-generation system.
        Stack is accessed through a last-in, first-out (LIFO) memory allocation system.
        Heap Space exists as long as the application runs and is larger than Stack, which is temporary, but faster.

What is reflection in Java and why is it useful?
Answer: Reflection is a feature in the Java programming language. It allows an executing Java program to examine or
"introspect" upon itself, and manipulate internal properties of the program. For example, it's possible for a Java class
to obtain the names of all its members and display them.

What is multithreading in Java?
Answer: In Java, Multithreading refers to a process of executing two or more threads simultaneously for maximum
utilization of the CPU. A thread in Java is a lightweight process requiring fewer resources to create and shares the
process resources.

What is synchronization in Java?
Answer: Synchronization in java is the capability to control the access of multiple threads to any shared resource.
In the Multithreading concept, multiple threads try to access the shared resources at a time to produce inconsistent results.
The synchronization is necessary for reliable communication between threads.

What is a Framework?
Answer: A framework is a set structure in which tasks are performed or completed.
        Typically, a framework refers to an often layered structure that indicates what kind of programs can or should be
        built and how they would connect to each other.

What are the testing Frameworks available in Java?
Answer: Selenium. Selenium is a free and open-source testing framework and is mostly used to test web applications based on various platforms. ...
        Serenity. ...
        JUnit. ...
        TestNG. ...
        Cucumber. ...
        JBehave. ...
        Mockito.

What are jUnit and testNG?
Answer: JUnit is an open-source framework used to trigger and write tests. TestNG is a Java-based framework that is an
upgraded option for running tests. Parallel test Runs. JUnit does not support to run parallel tests. TestNG can run
parallel tests.

What are the dependencies for this project?
Answer: Dependencies are the relationships of the preceding tasks to the succeeding tasks. Tasks may have multiple
preceding tasks and multiple succeeding tasks. The most common dependency relationship is a finish-to-start relationship.
Task P (predecessor) must be finished before task S (successor) can start.

What is dependency injection in Java?
Answer: Dependency injection (DI) is the concept in which objects get other required objects from outside. DI can be
implemented in any programming language. The general concept behind dependency injection is called Inversion of Control.
A Java class has a dependency on another class, if it uses an instance of this class.

Explain what static binding and dynamic binding is?
Answer: Static binding happens when all information needed to call a function is available at the compile-time. Dynamic
binding happens when the compiler cannot determine all information needed for a function call at compile-time.